CREATE TABLE IF NOT EXISTS "import" (
    "id" INTEGER PRIMARY KEY AUTOINCREMENT,
    "file_last_modified" TEXT,
    "timestamp" TEXT NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- The GTFS tables must be named gtfs_<file_name> (without .txt)
-- (note that GTFS mixes singular and plural names)
-- These tables should exactly match the spec because the import depends on this
-- They also have an autogenerated id and an import id

CREATE TABLE IF NOT EXISTS "gtfs_agency" (
    "id" INTEGER PRIMARY KEY AUTOINCREMENT,
    "agency_id" TEXT NOT NULL UNIQUE,
    "agency_name" TEXT NOT NULL,
    "agency_url" TEXT,
    "agency_timezone" TEXT,
    "agency_lang" TEXT,
    "agency_phone" TEXT,
    "agency_fare_url" TEXT,
    "agency_email" TEXT,
    "import_id" INTEGER NOT NULL,
    FOREIGN KEY ("import_id") REFERENCES "import" ("id")
);

-- This is not a GTFS table, just a master list of all services
-- to allow FK relationships to be made to either calendar or calendar_dates
CREATE TABLE IF NOT EXISTS "service" (
    "id" INTEGER PRIMARY KEY,
    "service_id" TEXT NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS "gtfs_calendar" (
    "id" INTEGER PRIMARY KEY AUTOINCREMENT,
    "service_id" TEXT NOT NULL UNIQUE,
    "monday" INTEGER NOT NULL,
    "tuesday" INTEGER NOT NULL,
    "wednesday" INTEGER NOT NULL,
    "thursday" INTEGER NOT NULL,
    "friday" INTEGER NOT NULL,
    "saturday" INTEGER NOT NULL,
    "sunday" INTEGER NOT NULL,
    "start_date" INTEGER NOT NULL,
    "end_date" INTEGER NOT NULL,
    "import_id" INTEGER NOT NULL,
    FOREIGN KEY ("import_id") REFERENCES "import" ("id"),
    FOREIGN KEY ("service_id") REFERENCES "service" ("service_id")
);

CREATE INDEX IF NOT EXISTS "idx_c_start_date" ON "gtfs_calendar" ("start_date");
CREATE INDEX IF NOT EXISTS "idx_c_end_date" ON "gtfs_calendar" ("end_date");


CREATE TABLE IF NOT EXISTS "gtfs_calendar_dates" (
    "id" INTEGER PRIMARY KEY AUTOINCREMENT,
    "service_id" TEXT,
    "date" INTEGER NOT NULL,
    "exception_type" INTEGER NOT NULL,
    "import_id" INTEGER NOT NULL,
    UNIQUE ("service_id", "date"),
    FOREIGN KEY ("import_id") REFERENCES "import" ("id"),
    FOREIGN KEY ("service_id") REFERENCES "service" ("service_id")
);

CREATE INDEX IF NOT EXISTS "idx_cd_date" ON "gtfs_calendar_dates" ("date");

CREATE TABLE IF NOT EXISTS "gtfs_feed_info" (
    "id" INTEGER PRIMARY KEY AUTOINCREMENT,
    "feed_publisher_name" TEXT NOT NULL,
    "feed_publisher_url" TEXT NOT NULL,
    "feed_lang" TEXT NOT NULL,
    "default_lang" TEXT,
    "feed_start_date" INTEGER,
    "feed_end_date" INTEGER,
    "feed_version" TEXT,
    "feed_contact_email" TEXT,
    "feed_contact_url" TEXT,
    "import_id" INTEGER NOT NULL,
    FOREIGN KEY ("import_id") REFERENCES "import" ("id")
);

CREATE TABLE IF NOT EXISTS "gtfs_shapes" (
    "id" INTEGER PRIMARY KEY AUTOINCREMENT,
    "shape_id" TEXT NOT NULL,
    "shape_pt_sequence" INTEGER NOT NULL,
    "shape_pt_lat" REAL NOT NULL,
    "shape_pt_lon" REAL NOT NULL,
    "shape_dist_traveled" REAL,
    "import_id" INTEGER NOT NULL,
    UNIQUE ("shape_id", "shape_pt_sequence"),
    FOREIGN KEY ("import_id") REFERENCES "import" ("id")
);

CREATE TABLE IF NOT EXISTS "gtfs_routes" (
    "id" INTEGER PRIMARY KEY AUTOINCREMENT,
    "route_id" TEXT NOT NULL UNIQUE,
    "route_short_name" TEXT NOT NULL,
    "route_long_name" TEXT NOT NULL,
    "route_desc" TEXT,
    "route_type" INTEGER NOT NULL,
    "route_url" TEXT,
    "agency_id" TEXT,
    "route_sort_order" INTEGER,
    "route_color" TEXT NOT NULL,
    "route_text_color" TEXT NOT NULL,
    "continuous_pickup" INTEGER,
    "continuous_drop_off" INTEGER,
    "import_id" INTEGER NOT NULL,
    FOREIGN KEY ("import_id") REFERENCES "import" ("id"),
    FOREIGN KEY ("agency_id") REFERENCES "gtfs_agency" ("agency_id")
);

CREATE TABLE IF NOT EXISTS "gtfs_trips" (
    "id" INTEGER PRIMARY KEY AUTOINCREMENT,
    "trip_id" TEXT NOT NULL UNIQUE,
    "service_id" TEXT NOT NULL,
    "route_id" TEXT NOT NULL,
    "shape_id" TEXT,
    "trip_headsign" TEXT,
    "trip_short_name" TEXT,
    "direction_id" INTEGER,
    "block_id" TEXT,
    "wheelchair_accessible" INTEGER,
    "bikes_allowed" INTEGER,
    "import_id" INTEGER NOT NULL,
    FOREIGN KEY ("import_id") REFERENCES "import" ("id"),
    FOREIGN KEY ("service_id") REFERENCES "service" ("service_id"),
    FOREIGN KEY ("route_id") REFERENCES "gtfs_routes" ("route_id"),
    FOREIGN KEY ("shape_id") REFERENCES "gtfs_shapes" ("shape_id")
);

CREATE INDEX IF NOT EXISTS "idx_t_route_id" ON "gtfs_trips" ("route_id");

CREATE TABLE IF NOT EXISTS "gtfs_stops" (
    "id" INTEGER PRIMARY KEY AUTOINCREMENT,
    "stop_id" TEXT NOT NULL UNIQUE,
    "stop_code" TEXT,
    "stop_name" TEXT NOT NULL,
    "stop_desc" TEXT NOT NULL,
    "location_type" INTEGER NOT NULL,
    "parent_station" TEXT,
    "zone_id" TEXT,
    "stop_url" TEXT,
    "stop_lon" REAL,
    "stop_lat" REAL,
    "stop_timezone" TEXT,
    "wheelchair_boarding" INTEGER,
    "level_id" TEXT,
    "platform_code" TEXT,
    "import_id" INTEGER NOT NULL,
    FOREIGN KEY ("import_id") REFERENCES "import" ("id"),
    FOREIGN KEY ("parent_station") REFERENCES "gtfs_stops" ("stop_id")
);

CREATE TABLE IF NOT EXISTS "stop_index" (
    "id" INTEGER PRIMARY KEY AUTOINCREMENT,
    "stop_id" TEXT NOT NULL UNIQUE,
    "min_lat" REAL, 
    "max_lat" REAL,
    "min_lon" REAL, 
    "max_lon" REAL,
    FOREIGN KEY ("stop_id") REFERENCES "gtfs_stops" ("stop_id")
);

CREATE INDEX IF NOT EXISTS "idx_si_min_lat" ON "stop_index" ("min_lat");
CREATE INDEX IF NOT EXISTS "idx_si_max_lat" ON "stop_index" ("max_lat");
CREATE INDEX IF NOT EXISTS "idx_si_min_lon" ON "stop_index" ("min_lon");
CREATE INDEX IF NOT EXISTS "idx_si_max_lon" ON "stop_index" ("max_lon");

CREATE TABLE IF NOT EXISTS "gtfs_stop_times" (
    "id" INTEGER PRIMARY KEY AUTOINCREMENT,
    "trip_id" TEXT NOT NULL,
    "stop_sequence" INTEGER NOT NULL,
    "arrival_time" TEXT NOT NULL,
    "departure_time" TEXT NOT NULL,
    "stop_id" TEXT NOT NULL,
    "stop_headsign" TEXT,
    "pickup_type" INTEGER,
    "drop_off_type" INTEGER,
    "continuous_pickup" INTEGER,
    "continuous_drop_off" INTEGER,
    "shape_dist_traveled" REAL,
    "timepoint" INTEGER,
    "import_id" INTEGER NOT NULL,
    UNIQUE ("trip_id", "stop_sequence"),
    FOREIGN KEY ("import_id") REFERENCES "import" ("id"),
    FOREIGN KEY ("trip_id") REFERENCES "gtfs_trips" ("trip_id"),
    FOREIGN KEY ("stop_id") REFERENCES "gtfs_stops" ("stop_id")
);

CREATE INDEX IF NOT EXISTS "idx_st_trip_id" ON "gtfs_stop_times" ("trip_id");
CREATE INDEX IF NOT EXISTS "idx_st_stop_id" ON "gtfs_stop_times" ("stop_id");

CREATE TABLE "maintenance_time" (
    "id" INTEGER PRIMARY KEY AUTOINCREMENT,
    "minute_of_day" INTEGER NOT NULL
);
