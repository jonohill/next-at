name: Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - docker_target: amd64
            rust_target: x86_64-unknown-linux-musl
          - docker_target: arm64
            rust_target: aarch64-unknown-linux-musl

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build
        run: |
          cd backend
          make build-docker-${{ matrix.docker_target }}
          cd -
          ls -thral backend/target/linux/*

      - name: Upload binary
        uses: actions/upload-artifact@v4.3.1
        with:
          name: ${{ matrix.rust_target }}
          path: backend/target/linux/${{ matrix.docker_target }}

  build_docker:

    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            backend/Dockerfile

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@2b51285047da1547ffb1b2203d8be4c0af6b1f20 # v3.2.0

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20 # v3.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Download amd64
        uses: actions/download-artifact@v4.1.4
        with:
          name: x86_64-unknown-linux-musl
          path: backend/target/linux/amd64

      - name: Download arm64
        uses: actions/download-artifact@v4.1.4
        with:
          name: aarch64-unknown-linux-musl
          path: backend/target/linux/arm64

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # v5.3.0
        with:
          context: backend
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.run_number }}"
          cache-from: type=gha
          cache-to: type=gha,mode=max
